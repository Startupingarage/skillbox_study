print('Задача 4. Недоделка-2')

# Вы всё так же работаете в конторе по разработке игр и смотрите программы прошлого горе-программиста.
# В одной из игр для детей, связанной с мультяшной работой с числами,
# вам нужно было написать код согласно следующим условиям: программа получает на вход два числа;
# в первом числе должно быть не менее трёх цифр, во втором — не менее четырёх, иначе программа выдаёт ошибку.
# Если всё нормально, то в каждом числе первая и последняя цифры меняются местами, а затем выводится их сумма.

# И тут вы натыкаетесь на программу, которая была написана предыдущим программистом и которая как раз решает такую задачу.
# Однако вас попросили немного переписать этот код, чтобы он не выглядел так ужасно.
# Да и вам самим становится от него, мягко говоря, не по себе.

# Постарайтесь разделить логику кода на три отдельные логические части (функции):
# - count_numbers — получает число и возвращает количество цифр в числе;
# - change_number — получает число, меняет в нём местами первую и последнюю цифры и возвращает изменённое число;
# - main — функция ничего не получает на вход, внутри она запрашивает нужные данные от пользователя, выполняет дополнительные проверки и вызывает функции 1 и 2 для выполнения задачи (проверки и изменения двух чисел).

# Разбейте приведённую ниже программу на функции.
# Повторений кода должно быть как можно меньше. Также сделайте, чтобы в основной части программы был только ввод чисел,
# затем изменённые числа и вывод их суммы.




def count_numbers(min_length):
    """
    Контроль ввода
    Получает число и возвращает количество цифр в числе 
    и минимальное кол-во цифр в числе.
    """
    retry_text = 'Ошибка ввода! Пожалуйста, введите целое положительное число.'
    
    while True:
        try:
            original_num = int(input('Введите число: '))
            temp = original_num
            num_count = 0

            while temp !=0:
                temp //= 10
                num_count += 1

            if num_count >= min_length:
                print(f'Колличество цифр в чиле: {num_count }')
                return original_num, num_count
            else:
                print(f'Ошибка! Число должно содержать не менее {min_length} цифр.')
        except ValueError:
            print(retry_text)


def change_number(num, num_count):
    """
    Получает число, меняет в нём местами первую и последнюю цифры 
    и возвращает изменённое число
    """
    last_digit = num % 10
    first_digit = num // 10 ** (num_count - 1)
    between_digits = num % 10 ** (num_count - 1) // 10
    changed_num = last_digit * 10 ** (num_count - 1) + between_digits * 10 + first_digit
    return changed_num


def main():
    """
    Основная логика программы
    """
    first_n, first_num_count = count_numbers(3)
    first_n_changed = change_number(first_n, first_num_count)
    print(f'Изменённое первое число: {first_n_changed}')

    
    second_n, second_num_count = count_numbers(4)
    second_n_changed = change_number(second_n, second_num_count)
    print(f'Изменённое второе число: {second_n_changed}')

    
    print(f'Сумма изменённых чисел: {first_n_changed + second_n_changed}')




if __name__ == '__main__':
    main()

