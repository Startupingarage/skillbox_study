print('Задача 3. Апгрейд калькулятора')

# Степан использует калькулятор для расчёта суммы и разности чисел, но на работе ему требуются не только обычные арифметические действия.
# Он ничего не хочет делать вручную, поэтому решил немного расширить функциональность калькулятора.

# Что нужно сделать
# Напишите программу, запрашивающую у пользователя число и действие, которое нужно сделать с числом:
# вывести сумму его цифр, максимальную или минимальную цифру.
# Каждое действие оформите в виде отдельной функции, а основную программу зациклите.

# Запрошенные числа должны передаваться в функции суммы, максимума и минимума при помощи аргументов.

# Пример 1
# Введите число: 984
# Введите номер действия:
# 1 - сумма цифр
# 2 - максимальная цифра
# 3 - минимальная цифра: 1
# Сумма цифр: 21

# Пример 2
# Введите число: 546
# Введите номер действия:
# 1 - сумма цифр
# 2 - максимальная цифра
# 3 - минимальная цифра: 2
# Максимальная цифра: 6

# Пример 3
# Введите число: 741
# Введите номер действия:
# 1 - сумма цифр
# 2 - максимальная цифра
# 3 - минимальная цифра: 3
# Минимальная цифра: 1


def calc():
    x = int(input('Введите число: '))
    choise = int(input('Введите номер действия:\n1 - сумма цифр\n2 - максимальная цифра\n3 - минимальная цифра: \n'))
    if choise == 1:
        summ(x)
    elif choise == 2:
        max_num(x)
    elif choise == 3:
        min_num(x)
    else:
        print('Введите корректное значение.')
        calc()


def summ (x):
    count = 0
    x_true = x
    while x > 0:
        count += x % 10
        x //= 10
    print(f'Сумма цифр числа {x_true} равна {count}')


def max_num(x):
    max_x = 0
    x_true = x
    while x > 0:
        num = x % 10
        if num > max_x:
            max_x = num
        x //= 10
    print(f'Максимальная цифра числа {x_true} равна {max_x}')

def min_num(x):
    min_x = 9
    x_true = x
    while x > 0:
        num = x % 10
        if num < min_x:
            min_x = num
        x //= 10
    print(f'Минимальная цифра числа {x_true} равна {min_x}')



calc()